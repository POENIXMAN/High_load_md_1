services:
  db:
    image: ${DB_IMAGE:-postgres:15-alpine}
    container_name: ${DB_CONTAINER_NAME:-school_journal_db}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-school_journal}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d school_journal" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M


  app:
    image: ${APP_IMAGE:-school_journal_app}
    container_name: ${APP_CONTAINER_NAME:-school_journal_app}
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST:-db}:${DB_PORT:-5432}/${POSTGRES_DB:-school_journal}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-postgres}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      SERVER_TOMCAT_THREADS_MAX: ${TOMCAT_THREADS_MAX:-200}
      SERVER_TOMCAT_THREADS_MIN_SPARE: ${TOMCAT_THREADS_MIN_SPAR:-10}

    ports:
      - "8080:8080"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M


volumes:
  db-data:

networks:
  app-network: