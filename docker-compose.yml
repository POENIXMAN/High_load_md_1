services:
  db:
    image: ${DB_IMAGE:-postgres:15-alpine}
    container_name: ${DB_CONTAINER_NAME:-school-db}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-schooldb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U  ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    image: ${APP_IMAGE:-school-journal-app}
    container_name: ${APP_CONTAINER_NAME:-school-journal-app}
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/school_journal
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: $postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

      SERVER_TOMCAT_THREADS_MAX: ${TOMCAT_THREADS_MAX:-200}
      SERVER_TOMCAT_THREADS_MIN_SPARE: ${TOMCAT_THREADS_MIN_SPARE:-10}
    ports:
      - "8080:8080"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M


volumes:
  db-data:

networks:
  app-network:
